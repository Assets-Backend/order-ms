generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model claim {
  claim_id      Int             @id @default(autoincrement())
  detail_fk     Int
  client_fk     Int
  cause         String
  urgency       urgency_options
  reported_date DateTime        @db.Timestamp(6)
  updated_by    Int
  deleted_at    DateTime?       @db.Timestamp(6)
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime        @default(now()) @db.Timestamp(6)
  order_detail  order_detail    @relation(fields: [detail_fk], references: [detail_id], onDelete: NoAction, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model order {
  order_id       Int            @id @default(autoincrement())
  client_fk      Int
  patient_fk     Int
  treatment_fk   Int
  frequency      Int            @db.SmallInt
  total_sessions Int            @db.SmallInt
  diagnosis      String?
  updated_by     Int
  deleted_at     DateTime?      @db.Timestamp(6)
  created_at     DateTime       @default(now()) @db.Timestamp(6)
  updated_at     DateTime       @default(now()) @db.Timestamp(6)
  order_detail   order_detail[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model order_detail {
  detail_id       Int       @id @default(autoincrement())
  order_fk        Int?
  client_fk       Int
  professional_fk Int?
  start_date      DateTime  @db.Timestamp(6)
  finish_date     DateTime  @db.Timestamp(6)
  sessions        Int       @db.SmallInt
  coinsurance     Decimal   @default(0) @db.Decimal(7, 2)
  value           Decimal   @db.Decimal(7, 2)
  cost            Decimal   @db.Decimal(7, 2)
  started_at      DateTime? @db.Date
  finished_at     DateTime? @db.Date
  requirements    String?   @db.VarChar(300)
  updated_by      Int
  created_at      DateTime  @default(now()) @db.Timestamp(6)
  updated_at      DateTime  @default(now()) @db.Timestamp(6)
  claim           claim[]
  order           order?    @relation(fields: [order_fk], references: [order_id], onDelete: NoAction, onUpdate: NoAction)
}

enum urgency_options {
  high
  medium
  low
}
